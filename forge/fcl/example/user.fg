# all users match the everyone permission
permission everyone {}

# only admins get admin permissions
permission sysadmin {
  assert includes $userctx.roles "_admin"
}

# the user model: the definition of a user
model user {
  # config
  single true # makes the model only ever return a single document

  # expected content in a document of this model
  schema {
    id           uuid          computed(uuid_v4) primary_key immutable
    created      date          computed(current_date) immutable
    lastUpdated  date          computed(current_date)
    username     string        unique merge required
    email        string        validate(email) merge required
    roles        array(string) merge

    password {
      type password(pbkdf2)
      validate minlen(8)
      trait hidden required
    }
  }

  # allow reads to user's own document
  publish "own user" {
    permission everyone
    where id $userctx.id
  }

  # admins get access to everyone
  publish "all users" {
    permission sysadmin
  }

  # admins can do anything they want
  policy { 
    permission sysadmin
    allow {}
  }

  # everyone can create users
  policy {
    method create
    permission everyone
    allow {}
  }

  # everyone can update/delete their own doc
  policy {
    method update delete
    permission everyone
    allow {
      where id $userctx.id
    }
  }

  # prevent normal users from changing roles field
  policy {
    method create update
    permission !sysadmin
    deny {
      where roles @ne "null"
    }
  }
}

# config for basic authentication
authorization password {
  model user
  username_field "username"
  password_field "password"
}
