# all users match the everyone permission
permission everyone {}

# only admins get admin permissions
permission admin {
  assert ok $userctx.admin
}

# the user model: the definition of a user
model user {
  # config
  single true # makes the model only ever return a single document

  # expected content in a document of this model
  schema {
    id           uuid      computed(uuid_v4) primary_key immutable
    created      date      computed(current_date) immutable
    lastUpdated  date      computed(current_date)
    username     string    unique merge required
    email        string    validate(email) merge required
    password     password  computed(pbkdf2) minlen(8) hidden required
    admin        bool      default(false) merge
  }

  # allow reads to user's own document
  publish ownUser {
    permission everyone
    where id $userctx.id
  }

  # admins get access to everyone
  publish allUsers {
    permission admin
  }

  # admins can do anything they want
  allow {
    policy all
    permission admin
  }

  # everyone can create users
  allow {
    policy create
    permission everyone
  }

  # everyone can update/delete their own doc
  allow {
    policy update delete
    permission everyone
    where id $userctx.id
  }

  # prevent users from changing admin field
  deny {
    policy create update
    permission !admin
    where admin true
  }
}

# config for basic authentication
authentication basic {
  model user
  where username $basic_auth.username
  assert {
    equal $doc.password password_hash($basic_auth.password $doc.password)
  }
}
