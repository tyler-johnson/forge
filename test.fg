# the user model: the definition of a user
model user {
  # config
  single true # makes the model only ever return a single document
  
  # expected content in a document of this model
  schema {
    id            uuid     computed(uuid_v4) primary_key immutable
    created       date     computed(current_date) immutable
    last_updated  date     computed(current_date)
    username      string   unique merge
    email         string   validate(email) merge
    password      password computed(pbkdf2) minlen(8) hidden
    admin         bool     default(false) merge
  }

  # allow reads to user's own document
  publish singleUser {
    permission everyone
    query {
      id $userctx.id
    }
  }

  # admins get access to everyone
  publish allUsers {
    permission admin
    query {}
  }

  # everyone can create users
  allow {
    policy create
    permission everyone
  }

  # admins can update/delete all users
  allow {
    policy update delete
    permission admin
  }

  # everyone can update/delete their own doc
  allow {
    policy update delete
    permission everyone
    assert {
      equal $userctx.id $doc.id
    }
  }

  # prevent creates missing some fields
  deny {
    policy create
    permission everyone
    assert {
      notok $draft.username
      notok $draft.password
      notok $draft.email
    }
  }
}

# config for basic authentication
authentication basic {
  model user
  query {
    username $basic_auth.username
    password {
      @password_hash $basic_auth.password
    }
  }
}

# all users match the everyone permission
permission everyone {}

# only admins get admin permissions
permission admin {
  assert {
    ok $userctx.admin
  }
}