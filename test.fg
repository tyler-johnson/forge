# all users match the everyone permission
permission everyone {}

# only admins get admin permissions
permission admin {
  assert ok $userctx.admin
}

# the user model: the definition of a user
model user {
  # config
  single true # makes the model only ever return a single document
  
  # expected content in a document of this model
  schema {
    id           uuid      computed(uuidv4) primaryKey immutable
    created      date      computed(currentDate) immutable
    lastUpdated  date      computed(currentDate)
    username     string    unique merge requireOnCreate
    email        string    validate(email) merge requireOnCreate
    password     password  computed(pbkdf2) minlen(8) hidden requireOnCreate
    admin        bool      default(false) merge
  }

  # allow reads to user's own document
  publish ownUser {
    permission everyone
    where id $userctx.id
  }

  # admins get access to everyone
  publish allUsers {
    permission admin
  }

  # admins can do anything they want
  allow {
    policy all
    permission admin
  }

  # everyone can create users
  allow {
    policy create
    permission everyone
  }

  # everyone can update/delete their own doc
  allow {
    policy update delete
    permission everyone
    where id $userctx.id
  }

  # prevent users from changing admin field
  deny {
    policy all
    permission !admin
    where admin @neq false
  }
}

# config for basic authentication
authentication basic {
  model user
  where {
    username $basicAuth.username
    password @passwordHash $basicAuth.password
  }
}
